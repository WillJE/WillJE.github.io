<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>will&#39;s blog</title>
    <link>https://willje.github.io/</link>
    <description>Recent content on will&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>本文采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可，转载请注明 will 和出处链接。</copyright>
    <lastBuildDate>Thu, 13 Jan 2022 21:23:18 +0800</lastBuildDate><atom:link href="https://willje.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL窗口函数</title>
      <link>https://willje.github.io/posts/mysql/mysql%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/</link>
      <pubDate>Thu, 13 Jan 2022 21:23:18 +0800</pubDate>
      
      <guid>https://willje.github.io/posts/mysql/mysql%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/</guid>
      <description>模拟问题描述 给定一组中学生的历次语文月考成绩表（每名学生含有 4 次成绩），需要实现以下 3 个需求： 对每名学生的 4 次成绩表分别进行排序，排序后每人的成绩排名 1-2-3-4 求每名学生历次月考成绩的变化幅度，即本月较上个月的成绩差值 求每名学生历次月考成绩中近 3 次平均分 数据表样例如下： 窗口函数介绍 在分析上述需求之前，首先对窗口函数进行介绍。何为窗口函数呢？既然窗口函数这个名字源于数</description>
    </item>
    
    <item>
      <title>Shell学习</title>
      <link>https://willje.github.io/posts/linux/shell%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Fri, 10 Dec 2021 20:55:29 +0800</pubDate>
      
      <guid>https://willje.github.io/posts/linux/shell%E5%AD%A6%E4%B9%A0/</guid>
      <description>概述 shell是一种解释器，用来 Linux操作系统的核心是kernal（内核）！ 当应用程序在执行时，需要调用计算机硬件的cpu,内存等资源！ 程序将指令发送给内核执行！ 为了防止程序发送一些恶意指令导致损坏内核，在内核和应用程序接口之间，设置一个中间层，称为shell! 我们可以通过 cat /etc/shells 查看系统提供的Shell解析器种类 [damon@hadoop97 ~]$ cat /etc/shells /bin/sh /bin/bash /sbin/nologin /bin/dash /bin/tcsh /bin/csh 这里要说一下的是系统默认</description>
    </item>
    
    <item>
      <title>kubernetes集群里的三种IP</title>
      <link>https://willje.github.io/posts/k8s/k8s-%E9%9B%86%E7%BE%A4%E9%87%8C%E7%9A%84%E4%B8%89%E7%A7%8Dipnodeippodipclusterip/</link>
      <pubDate>Tue, 23 Nov 2021 21:23:18 +0800</pubDate>
      
      <guid>https://willje.github.io/posts/k8s/k8s-%E9%9B%86%E7%BE%A4%E9%87%8C%E7%9A%84%E4%B8%89%E7%A7%8Dipnodeippodipclusterip/</guid>
      <description>Kubernetes集群里有三种IP地址，分别如下： Node IP：Node节点的IP地址，即物理网卡的IP地址。 Pod IP：Pod的IP地址，即docker容器的IP地址，此为虚拟IP地址。 Cluster IP：Service的IP地址，此为虚拟IP地址。 Node IP 可以是物理机的IP（也可能是虚拟机IP）。每个Service都会在Node节点上开通一个端口，外部可以通过NodeIP:No</description>
    </item>
    
    <item>
      <title>基于Kubernetes的多云和混合云</title>
      <link>https://willje.github.io/posts/k8s/%E5%9F%BA%E4%BA%8Ekubernetes%E7%9A%84%E5%A4%9A%E4%BA%91%E5%92%8C%E6%B7%B7%E5%90%88%E4%BA%91/</link>
      <pubDate>Tue, 23 Nov 2021 21:23:18 +0800</pubDate>
      
      <guid>https://willje.github.io/posts/k8s/%E5%9F%BA%E4%BA%8Ekubernetes%E7%9A%84%E5%A4%9A%E4%BA%91%E5%92%8C%E6%B7%B7%E5%90%88%E4%BA%91/</guid>
      <description>https://www.bilibili.com/video/av285507760/ 云原生与传统应用程序的区别 拥抱错误，容错转移，资源调配 水平缩放、可用冗余； 云原生应用的需求 快速、稳定重新发布应用 脚本-》虚拟机-》容器化 动态、灵活的网络 配置脚本-》软件定义网路-》服务网格 OpenApplicationModel https://oam.dev Dapr https://dapr.io/ The Distributed Application Runtime Dapr介绍| Dapr学习笔记 - 敖小剑 工作方式 Dapr向每个计算单元注入了一个Sidecar容器/进程。Sidecar与事件触发器进行交互，并通过标准HT</description>
    </item>
    
    <item>
      <title>dapr入门</title>
      <link>https://willje.github.io/posts/k8s/dapr%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sat, 13 Nov 2021 21:23:18 +0800</pubDate>
      
      <guid>https://willje.github.io/posts/k8s/dapr%E5%85%A5%E9%97%A8/</guid>
      <description>Dapr是什么？ Dapr 是 Distributed Application Runtime （分布式应用运行时）的缩写。 工作方式 Dapr向每个计算单元注入了一个Sidecar容器/进程。Sidecar与事件触发器进行交互，并通过标准HTTP或gRPC协议与计算单元进行通信。这使Dapr能够支持所有现有和将来的编程语言，而无需您导入框架或库。 Dapr通过标准的HTTP verbs 或gRPC interface 提供内置的状态管理，可靠消息传递（至少一次传</description>
    </item>
    
    <item>
      <title>CNCF云原生</title>
      <link>https://willje.github.io/posts/other/concept/cncf/</link>
      <pubDate>Wed, 10 Nov 2021 20:55:29 +0800</pubDate>
      
      <guid>https://willje.github.io/posts/other/concept/cncf/</guid>
      <description>云原生计算基金会(CNCF)Cloud Native Computing Foundation是Linux基金会旗下的非盈利组织，来推动云原生计算的发展，帮助云原生技术开发人员来构建出色的产品。 CNCF的成立与一个重要项目密切相关，那就是Kubernetes。K8s最早是谷歌的内部容器编排项目Borg，为了推进其发展，谷歌决定将其开源，于是跟Linux基金会在2015年一起创办了CNCF。</description>
    </item>
    
    <item>
      <title>皇帝的新衣-共有知识和公共知识</title>
      <link>https://willje.github.io/posts/read/%E7%9A%87%E5%B8%9D%E7%9A%84%E6%96%B0%E8%A1%A3-%E5%85%B1%E6%9C%89%E7%9F%A5%E8%AF%86%E5%92%8C%E5%85%AC%E5%85%B1%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Wed, 10 Nov 2021 20:55:29 +0800</pubDate>
      
      <guid>https://willje.github.io/posts/read/%E7%9A%87%E5%B8%9D%E7%9A%84%E6%96%B0%E8%A1%A3-%E5%85%B1%E6%9C%89%E7%9F%A5%E8%AF%86%E5%92%8C%E5%85%AC%E5%85%B1%E7%9F%A5%E8%AF%86/</guid>
      <description>最近看到李永乐的视频 你真的看懂《皇帝的新装》了吗？心知肚明和说出来有啥区别 受益非浅，于是记录一下。 什么是《皇帝的新装》，来自于著名作家安徒生的童话， 红眼睛、蓝眼睛 我们首先来讨论一个逻辑问题，这个问题最早是由华裔数学家陶哲轩提出的。 一个村子中有100个人，其中95个人的眼睛是蓝色的，5个人的眼睛是红色的。村子里有一个奇怪的规矩：虽然每个人都能看到其他人的眼睛是</description>
    </item>
    
    <item>
      <title>Centos安装Nodejs和Python</title>
      <link>https://willje.github.io/posts/linux/centos%E5%AE%89%E8%A3%85nodejs%E5%92%8Cpython/</link>
      <pubDate>Sat, 30 Oct 2021 20:55:29 +0800</pubDate>
      
      <guid>https://willje.github.io/posts/linux/centos%E5%AE%89%E8%A3%85nodejs%E5%92%8Cpython/</guid>
      <description>一、node.js安装 首先下载并解压安装包： 注:历史版本可自行去https://nodejs.org/dist/ 下载 $ wget https://npm.taobao.org/mirrors/node/v14.5.0/node-v14.5.0-linux-x64.tar.gz $ tar -xzf node-v14.5.0-linux-x64.tar.gz 在/usr/local/bin中建立软连接方便我们在全局快捷运行 注：因为我得nodejs包是在/data/bin/nodejs中，各位看官请根据自己解压得路接自行更改 # 以下是把bin中所有都建立软连接 $ ln -s /data/bin/nodejs/default/bin/* /usr/local/bin/ 查看node.js是</description>
    </item>
    
    <item>
      <title>Serveless和FaaS</title>
      <link>https://willje.github.io/posts/other/concept/serverless%E5%92%8Cfaas/</link>
      <pubDate>Sun, 10 Oct 2021 20:55:29 +0800</pubDate>
      
      <guid>https://willje.github.io/posts/other/concept/serverless%E5%92%8Cfaas/</guid>
      <description>无服务器架构（Serverless architectures）是指一个应用大量依赖第三方服务（后端即服务，Backend as a Service，简称“BaaS”），或者把代码交由托管的、短生命周期的容器中执行（函数即服务，Function as a Service，简称“FaaS”）。现在最知名的 FaaS 平台是 AWS Lambda。把这些技术和单页应用等相关概念相结合，这样的架构无</description>
    </item>
    
    <item>
      <title>helm学习</title>
      <link>https://willje.github.io/posts/k8s/helm%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Fri, 01 Oct 2021 16:23:40 +0800</pubDate>
      
      <guid>https://willje.github.io/posts/k8s/helm%E5%AD%A6%E4%B9%A0/</guid>
      <description>helm介绍 chart Helm 的软件包，采用 TAR 格式。类似于 APT 的 DEB 包或者 YUM 的 RPM 包，其包含了一组定义 Kubernetes 资源相关的 YAML 文件。 Repoistory Helm 的软件仓库，Repository 本质上是一个 Web 服务器，该服务器保存了一系列的 Chart 软件包以供用户下载，并且提供了一个该 Repository 的 Chart 包的清单文件以供查询。Helm 可以同时管理多个不同的 Repository。 Release 使用 helm install 命令在 Kubernetes 集群中部署的 Chart 称为 Release，这里的 Release</description>
    </item>
    
  </channel>
</rss>
