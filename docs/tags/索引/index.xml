<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>索引 on will&#39;s blog</title>
    <link>https://willje.github.io/tags/%E7%B4%A2%E5%BC%95/</link>
    <description>Recent content in 索引 on will&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>本文采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可，转载请注明 will 和出处链接。</copyright>
    <lastBuildDate>Thu, 16 Apr 2020 14:48:19 +0800</lastBuildDate><atom:link href="https://willje.github.io/tags/%E7%B4%A2%E5%BC%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL什么情况下会造成索引失效</title>
      <link>https://willje.github.io/posts/mysql/mysql%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8B%E4%BC%9A%E9%80%A0%E6%88%90%E7%B4%A2%E5%BC%95%E5%A4%B1%E6%95%88/</link>
      <pubDate>Thu, 16 Apr 2020 14:48:19 +0800</pubDate>
      
      <guid>https://willje.github.io/posts/mysql/mysql%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8B%E4%BC%9A%E9%80%A0%E6%88%90%E7%B4%A2%E5%BC%95%E5%A4%B1%E6%95%88/</guid>
      <description>一、准备工作，准备sql 这里我使用的mysql版本是 8.0.19。 CREATE TABLE `student` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(20), `age` int(11), `address` varchar(25), `crtdate` timestamp, PRIMARY KEY (`id`) USING BTREE ); insert into student(name,age,address,crtdate) values(&amp;#39;张三&amp;#39;, 15, &amp;#39;山东青岛&amp;#39;, now()); insert into student(name,age,address,crtdate) values(&amp;#39;李四&amp;#39;, 17, &amp;#39;山东济南&amp;#39;, now()); insert into student(name,age,address,crtdate) values(&amp;#39;王五&amp;#39;, 18, &amp;#39;山东潍坊&amp;#39;, now()); -- 创建复</description>
    </item>
    
    <item>
      <title>MySQL中的索引和Explain的用法</title>
      <link>https://willje.github.io/posts/mysql/mysql%E4%B8%AD%E7%9A%84%E7%B4%A2%E5%BC%95%E5%92%8Cexplain%E7%9A%84%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sat, 11 Apr 2020 11:20:54 +0800</pubDate>
      
      <guid>https://willje.github.io/posts/mysql/mysql%E4%B8%AD%E7%9A%84%E7%B4%A2%E5%BC%95%E5%92%8Cexplain%E7%9A%84%E7%94%A8%E6%B3%95/</guid>
      <description>写在前面 日常开发中，当数据体量比较大的时候可能就会遇到慢SQL的问题，找出这些SQL并解决，就会用到explain这个命令来查看一个这些SQL语句的执行计划，看下该命令有没有做全表扫描，有没有走索引，这些都可以通过explain命令来查看。 性能下降原因 执行时间长；等待时间长 查询语句写的差（自身问题）； 索引失效（单值索引或复合索引失效）； 关联查询太多join（</description>
    </item>
    
  </channel>
</rss>
