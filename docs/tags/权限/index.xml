<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>权限 on will&#39;s blog</title>
    <link>https://willje.github.io/tags/%E6%9D%83%E9%99%90/</link>
    <description>Recent content in 权限 on will&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>本文采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可，转载请注明 will 和出处链接。</copyright>
    <lastBuildDate>Fri, 10 Sep 2021 20:55:29 +0800</lastBuildDate><atom:link href="https://willje.github.io/tags/%E6%9D%83%E9%99%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>权限系统的设计模式</title>
      <link>https://willje.github.io/posts/other/concept/%E6%9D%83%E9%99%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-acl-rbac-abac/</link>
      <pubDate>Fri, 10 Sep 2021 20:55:29 +0800</pubDate>
      
      <guid>https://willje.github.io/posts/other/concept/%E6%9D%83%E9%99%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-acl-rbac-abac/</guid>
      <description>权限系统的设计模式 ACL RBAC ABAC ACL（Access Control List）:访问权限列表 如： user1&amp;ndash;&amp;gt;AC1 user1&amp;ndash;&amp;gt;AC2 user2&amp;ndash;&amp;gt;AC1 此时权限汇总成一个列表 这种设计最常见的应用就是文件系统的权限设计，如微软的NTFS 对权限控制比较分散，不便于管理，比如无法简单地将一组文件设置统一的权限开放给指定的一群用户 RBAC(Role Base Access Control):基于角色的权限控制 与ACL 对比 RBAC不用给用户单个分配权限，只用指向对应的角色就会</description>
    </item>
    
  </channel>
</rss>
